<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>trestle</artifactId>
    <groupId>com.nickrobison.trestle</groupId>
    <version>0.9.2-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>trestle-server</artifactId>

  <properties>
    <dropwizard.version>2.0.10</dropwizard.version>
    <logback.version>1.2.3</logback.version>
    <sonar.skip>true</sonar.skip>
    <docker.version>${project.version}</docker.version>
    <server.config.file>config.prod.yml</server.config.file>
    <ontology.directory>ontology</ontology.directory>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.dropwizard</groupId>
        <artifactId>dropwizard-bom</artifactId>
        <version>${dropwizard.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>io.dropwizard</groupId>
        <artifactId>dropwizard-dependencies</artifactId>
        <version>${dropwizard.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>ru.vyarus</groupId>
        <artifactId>dropwizard-guicey</artifactId>
        <version>5.0.1</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>4.0.1</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!--Trestle modules-->
    <dependency>
      <groupId>com.nickrobison.trestle</groupId>
      <artifactId>trestle-reasoner</artifactId>
      <version>0.9.2-SNAPSHOT</version>
      <exclusions>
        <exclusion>
          <artifactId>javaee-api</artifactId>
          <groupId>javax</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.nickrobison.trestle</groupId>
      <artifactId>trestle-datasets</artifactId>
      <version>0.9.2-SNAPSHOT</version>
    </dependency>
    <!--Manual Dependency specification-->
    <!--Dropwizard and modules-->
    <dependency>
      <groupId>io.dropwizard</groupId>
      <artifactId>dropwizard-core</artifactId>
    </dependency>
    <dependency>
      <groupId>io.dropwizard</groupId>
      <artifactId>dropwizard-auth</artifactId>
    </dependency>
    <dependency>
      <groupId>io.dropwizard</groupId>
      <artifactId>dropwizard-assets</artifactId>
    </dependency>
    <dependency>
      <groupId>io.dropwizard</groupId>
      <artifactId>dropwizard-hibernate</artifactId>
      <exclusions>
        <exclusion>
          <groupId>xml-apis</groupId>
          <artifactId>xml-apis</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.dropwizard</groupId>
      <artifactId>dropwizard-migrations</artifactId>
      <exclusions>
        <exclusion>
          <groupId>xml-apis</groupId>
          <artifactId>xml-apis</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>ru.vyarus</groupId>
      <artifactId>dropwizard-guicey</artifactId>
    </dependency>
    <dependency>
      <groupId>org.glassfish.hk2</groupId>
      <artifactId>guice-bridge</artifactId>
    </dependency>
    <dependency>
      <groupId>com.github.dirkraft.dropwizard</groupId>
      <artifactId>dropwizard-file-assets</artifactId>
      <version>0.0.2</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>com.bedatadriven</groupId>
      <artifactId>jackson-datatype-jts</artifactId>
      <version>2.4</version>
    </dependency>
    <dependency>
      <groupId>io.swagger</groupId>
      <artifactId>swagger-core</artifactId>
      <version>1.6.1</version>
      <exclusions>
        <exclusion>
          <artifactId>validation-api</artifactId>
          <groupId>javax.validation</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.smoketurner</groupId>
      <artifactId>dropwizard-swagger</artifactId>
      <version>2.0.0-1</version>
    </dependency>
    <!--General application dependencies-->
    <dependency>
      <groupId>org.reflections</groupId>
      <artifactId>reflections</artifactId>
      <version>0.9.12</version>
    </dependency>
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>
    <dependency>
      <groupId>com.jwt4j</groupId>
      <artifactId>jwt4j</artifactId>
      <version>0.1.1</version>
    </dependency>
    <dependency>
      <groupId>at.favre.lib</groupId>
      <artifactId>bcrypt</artifactId>
      <version>0.9.0</version>
    </dependency>
    <dependency>
      <groupId>org.wololo</groupId>
      <artifactId>jts2geojson</artifactId>
      <version>0.14.3</version>
    </dependency>
    <dependency>
      <groupId>de.grundid.opendatalab</groupId>
      <artifactId>geojson-jackson</artifactId>
      <version>1.14</version>
    </dependency>
    <dependency>
      <groupId>com.esri.geometry</groupId>
      <artifactId>esri-geometry-api</artifactId>
    </dependency>
    <!--    Testing dependencies-->
    <dependency>
      <groupId>io.dropwizard</groupId>
      <artifactId>dropwizard-testing</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>3.3.3</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.test-framework.providers</groupId>
      <artifactId>jersey-test-framework-provider-grizzly2</artifactId>
      <version>2.31</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>javax.servlet</groupId>
          <artifactId>javax.servlet-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <version>1.9.1</version>
            <executions>
              <execution>
                <id>install node and yarn</id>
                <goals>
                  <goal>install-node-and-yarn</goal>
                </goals>
                <configuration>
                  <nodeVersion>v9.3.0</nodeVersion>
                  <yarnVersion>v0.28.4</yarnVersion>
                </configuration>
              </execution>
              <execution>
                <id>yarn install</id>
                <goals>
                  <goal>yarn</goal>
                </goals>
                <!--We need this because yarn often forgets to build the native sass and mozjpeg dependencies-->
                <configuration>
                  <arguments>install --force</arguments>
                </configuration>
              </execution>
              <execution>
                <id>webpack build</id>
                <goals>
                  <goal>webpack</goal>
                </goals>
                <configuration>
                  <arguments>--config config/webpack.prod-temp.js</arguments>
                </configuration>
              </execution>
            </executions>
            <configuration>
              <installDirectory>binaries</installDirectory>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-ontology</id>
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target</outputDirectory>
              <resources>
                <resource>
                  <filtering>false</filtering>
                  <!--I'm not sure if this is a great way to handle this, but we'll see-->
                  <directory>${project.basedir}/../${ontology.directory}</directory>
                  <includes>
                    <include>trestle.owl</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!--This has to run before building the Docker image, otherwise we won't get the UberJAR-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <createDependencyReducedPom>true</createDependencyReducedPom>
              <!--We can't minimize the jar, otherwise Dropwizard will complain-->
              <minimizeJar>false</minimizeJar>
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                  </excludes>
                </filter>
              </filters>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>com.nickrobison.trestle.server.TrestleServer</mainClass>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>reference.conf</resource>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>application.conf</resource>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.google.cloud.tools</groupId>
        <artifactId>jib-maven-plugin</artifactId>
        <version>2.4.0</version>
        <configuration>
          <to>
            <image>${docker.image.prefix}/${project.artifactId}</image>
            <tags>
              <tag>latest</tag>
            </tags>
          </to>
          <from>
            <image>openjdk:11.0.6-jdk-slim-buster</image>
          </from>
          <container>
            <entrypoint>/entrypoint.sh</entrypoint>
            <ports>
              <port>8080</port>
              <port>8087</port>
            </ports>
          </container>
          <extraDirectories>
            <paths>
              <path>${project.basedir}/docker</path>
            </paths>
            <permissions>
              <permission>
                <file>/entrypoint.sh</file>
                <mode>755</mode>
              </permission>
            </permissions>
          </extraDirectories>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>dockerBuild</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
          </archive>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
