// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TopNavComponent should should be logged in 1`] = `
TopNavComponent {
  "headerClicked": EventEmitter_ {
    "__isAsync": false,
    "_isScalar": false,
    "closed": false,
    "hasError": false,
    "isStopped": false,
    "observers": Array [],
    "thrownError": null,
  },
  "store": MockStore {
    "_isScalar": false,
    "actionsObserver": ActionsSubject {
      "_isScalar": false,
      "_value": Object {
        "type": "@ngrx/store/init",
      },
      "closed": false,
      "hasError": false,
      "isStopped": false,
      "observers": Array [],
      "thrownError": null,
    },
    "initialState": Object {},
    "lastState": Object {},
    "reducerManager": MockReducerManager {
      "_isScalar": false,
      "_value": [Function],
      "closed": false,
      "hasError": false,
      "isStopped": false,
      "observers": Array [],
      "thrownError": null,
    },
    "scannedActions$": Observable {
      "_isScalar": false,
      "source": ActionsSubject {
        "_isScalar": false,
        "_value": Object {
          "type": "@ngrx/store/init",
        },
        "closed": false,
        "hasError": false,
        "isStopped": false,
        "observers": Array [],
        "thrownError": null,
      },
    },
    "selectors": Map {
      [Function] => null,
    },
    "source": MockState {
      "_isScalar": false,
      "_value": Object {},
      "closed": false,
      "hasError": false,
      "isStopped": false,
      "observers": Array [
        MapSubscriber {
          "_parentOrParents": DistinctUntilChangedSubscriber {
            "_parentOrParents": Subscriber {
              "_parentOrParents": null,
              "_subscriptions": Array [
                [Circular],
              ],
              "closed": false,
              "destination": SafeSubscriber {
                "_complete": undefined,
                "_context": Object {
                  "unsubscribe": [Function],
                },
                "_error": [Function],
                "_next": [Function],
                "_parentOrParents": null,
                "_parentSubscriber": [Circular],
                "_subscriptions": null,
                "closed": false,
                "destination": Object {
                  "closed": true,
                  "complete": [Function],
                  "error": [Function],
                  "next": [Function],
                },
                "isStopped": false,
                "syncErrorThrowable": false,
                "syncErrorThrown": false,
                "syncErrorValue": null,
              },
              "isStopped": false,
              "syncErrorThrowable": true,
              "syncErrorThrown": false,
              "syncErrorValue": null,
            },
            "_subscriptions": Array [
              [Circular],
            ],
            "closed": false,
            "destination": Subscriber {
              "_parentOrParents": null,
              "_subscriptions": Array [
                [Circular],
              ],
              "closed": false,
              "destination": SafeSubscriber {
                "_complete": undefined,
                "_context": Object {
                  "unsubscribe": [Function],
                },
                "_error": [Function],
                "_next": [Function],
                "_parentOrParents": null,
                "_parentSubscriber": [Circular],
                "_subscriptions": null,
                "closed": false,
                "destination": Object {
                  "closed": true,
                  "complete": [Function],
                  "error": [Function],
                  "next": [Function],
                },
                "isStopped": false,
                "syncErrorThrowable": false,
                "syncErrorThrown": false,
                "syncErrorValue": null,
              },
              "isStopped": false,
              "syncErrorThrowable": true,
              "syncErrorThrown": false,
              "syncErrorValue": null,
            },
            "hasKey": true,
            "isStopped": false,
            "key": TrestleUser {
              "_email": "",
              "_firstName": "",
              "_id": undefined,
              "_lastName": "",
              "_password": "",
              "_privileges": 3,
            },
            "keySelector": undefined,
            "syncErrorThrowable": true,
            "syncErrorThrown": false,
            "syncErrorValue": null,
          },
          "_subscriptions": Array [
            SubjectSubscription {
              "_parentOrParents": [Circular],
              "_subscriptions": null,
              "closed": false,
              "subject": [Circular],
              "subscriber": [Circular],
            },
          ],
          "closed": false,
          "count": 2,
          "destination": DistinctUntilChangedSubscriber {
            "_parentOrParents": Subscriber {
              "_parentOrParents": null,
              "_subscriptions": Array [
                [Circular],
              ],
              "closed": false,
              "destination": SafeSubscriber {
                "_complete": undefined,
                "_context": Object {
                  "unsubscribe": [Function],
                },
                "_error": [Function],
                "_next": [Function],
                "_parentOrParents": null,
                "_parentSubscriber": [Circular],
                "_subscriptions": null,
                "closed": false,
                "destination": Object {
                  "closed": true,
                  "complete": [Function],
                  "error": [Function],
                  "next": [Function],
                },
                "isStopped": false,
                "syncErrorThrowable": false,
                "syncErrorThrown": false,
                "syncErrorValue": null,
              },
              "isStopped": false,
              "syncErrorThrowable": true,
              "syncErrorThrown": false,
              "syncErrorValue": null,
            },
            "_subscriptions": Array [
              [Circular],
            ],
            "closed": false,
            "destination": Subscriber {
              "_parentOrParents": null,
              "_subscriptions": Array [
                [Circular],
              ],
              "closed": false,
              "destination": SafeSubscriber {
                "_complete": undefined,
                "_context": Object {
                  "unsubscribe": [Function],
                },
                "_error": [Function],
                "_next": [Function],
                "_parentOrParents": null,
                "_parentSubscriber": [Circular],
                "_subscriptions": null,
                "closed": false,
                "destination": Object {
                  "closed": true,
                  "complete": [Function],
                  "error": [Function],
                  "next": [Function],
                },
                "isStopped": false,
                "syncErrorThrowable": false,
                "syncErrorThrown": false,
                "syncErrorValue": null,
              },
              "isStopped": false,
              "syncErrorThrowable": true,
              "syncErrorThrown": false,
              "syncErrorValue": null,
            },
            "hasKey": true,
            "isStopped": false,
            "key": TrestleUser {
              "_email": "",
              "_firstName": "",
              "_id": undefined,
              "_lastName": "",
              "_password": "",
              "_privileges": 3,
            },
            "keySelector": undefined,
            "syncErrorThrowable": true,
            "syncErrorThrown": false,
            "syncErrorValue": null,
          },
          "isStopped": false,
          "project": [Function],
          "syncErrorThrowable": true,
          "syncErrorThrown": false,
          "syncErrorValue": null,
          "thisArg": [Circular],
        },
      ],
      "thrownError": null,
    },
    "state$": MockState {
      "_isScalar": false,
      "_value": Object {},
      "closed": false,
      "hasError": false,
      "isStopped": false,
      "observers": Array [
        MapSubscriber {
          "_parentOrParents": DistinctUntilChangedSubscriber {
            "_parentOrParents": Subscriber {
              "_parentOrParents": null,
              "_subscriptions": Array [
                [Circular],
              ],
              "closed": false,
              "destination": SafeSubscriber {
                "_complete": undefined,
                "_context": Object {
                  "unsubscribe": [Function],
                },
                "_error": [Function],
                "_next": [Function],
                "_parentOrParents": null,
                "_parentSubscriber": [Circular],
                "_subscriptions": null,
                "closed": false,
                "destination": Object {
                  "closed": true,
                  "complete": [Function],
                  "error": [Function],
                  "next": [Function],
                },
                "isStopped": false,
                "syncErrorThrowable": false,
                "syncErrorThrown": false,
                "syncErrorValue": null,
              },
              "isStopped": false,
              "syncErrorThrowable": true,
              "syncErrorThrown": false,
              "syncErrorValue": null,
            },
            "_subscriptions": Array [
              [Circular],
            ],
            "closed": false,
            "destination": Subscriber {
              "_parentOrParents": null,
              "_subscriptions": Array [
                [Circular],
              ],
              "closed": false,
              "destination": SafeSubscriber {
                "_complete": undefined,
                "_context": Object {
                  "unsubscribe": [Function],
                },
                "_error": [Function],
                "_next": [Function],
                "_parentOrParents": null,
                "_parentSubscriber": [Circular],
                "_subscriptions": null,
                "closed": false,
                "destination": Object {
                  "closed": true,
                  "complete": [Function],
                  "error": [Function],
                  "next": [Function],
                },
                "isStopped": false,
                "syncErrorThrowable": false,
                "syncErrorThrown": false,
                "syncErrorValue": null,
              },
              "isStopped": false,
              "syncErrorThrowable": true,
              "syncErrorThrown": false,
              "syncErrorValue": null,
            },
            "hasKey": true,
            "isStopped": false,
            "key": TrestleUser {
              "_email": "",
              "_firstName": "",
              "_id": undefined,
              "_lastName": "",
              "_password": "",
              "_privileges": 3,
            },
            "keySelector": undefined,
            "syncErrorThrowable": true,
            "syncErrorThrown": false,
            "syncErrorValue": null,
          },
          "_subscriptions": Array [
            SubjectSubscription {
              "_parentOrParents": [Circular],
              "_subscriptions": null,
              "closed": false,
              "subject": [Circular],
              "subscriber": [Circular],
            },
          ],
          "closed": false,
          "count": 2,
          "destination": DistinctUntilChangedSubscriber {
            "_parentOrParents": Subscriber {
              "_parentOrParents": null,
              "_subscriptions": Array [
                [Circular],
              ],
              "closed": false,
              "destination": SafeSubscriber {
                "_complete": undefined,
                "_context": Object {
                  "unsubscribe": [Function],
                },
                "_error": [Function],
                "_next": [Function],
                "_parentOrParents": null,
                "_parentSubscriber": [Circular],
                "_subscriptions": null,
                "closed": false,
                "destination": Object {
                  "closed": true,
                  "complete": [Function],
                  "error": [Function],
                  "next": [Function],
                },
                "isStopped": false,
                "syncErrorThrowable": false,
                "syncErrorThrown": false,
                "syncErrorValue": null,
              },
              "isStopped": false,
              "syncErrorThrowable": true,
              "syncErrorThrown": false,
              "syncErrorValue": null,
            },
            "_subscriptions": Array [
              [Circular],
            ],
            "closed": false,
            "destination": Subscriber {
              "_parentOrParents": null,
              "_subscriptions": Array [
                [Circular],
              ],
              "closed": false,
              "destination": SafeSubscriber {
                "_complete": undefined,
                "_context": Object {
                  "unsubscribe": [Function],
                },
                "_error": [Function],
                "_next": [Function],
                "_parentOrParents": null,
                "_parentSubscriber": [Circular],
                "_subscriptions": null,
                "closed": false,
                "destination": Object {
                  "closed": true,
                  "complete": [Function],
                  "error": [Function],
                  "next": [Function],
                },
                "isStopped": false,
                "syncErrorThrowable": false,
                "syncErrorThrown": false,
                "syncErrorValue": null,
              },
              "isStopped": false,
              "syncErrorThrowable": true,
              "syncErrorThrown": false,
              "syncErrorValue": null,
            },
            "hasKey": true,
            "isStopped": false,
            "key": TrestleUser {
              "_email": "",
              "_firstName": "",
              "_id": undefined,
              "_lastName": "",
              "_password": "",
              "_privileges": 3,
            },
            "keySelector": undefined,
            "syncErrorThrowable": true,
            "syncErrorThrown": false,
            "syncErrorValue": null,
          },
          "isStopped": false,
          "project": [Function],
          "syncErrorThrowable": true,
          "syncErrorThrown": false,
          "syncErrorValue": null,
          "thisArg": [Circular],
        },
      ],
      "thrownError": null,
    },
  },
  "user": Store {
    "_isScalar": false,
    "actionsObserver": ActionsSubject {
      "_isScalar": false,
      "_value": Object {
        "type": "@ngrx/store/init",
      },
      "closed": false,
      "hasError": false,
      "isStopped": false,
      "observers": Array [],
      "thrownError": null,
    },
    "operator": DistinctUntilChangedOperator {
      "compare": undefined,
      "keySelector": undefined,
    },
    "reducerManager": MockReducerManager {
      "_isScalar": false,
      "_value": [Function],
      "closed": false,
      "hasError": false,
      "isStopped": false,
      "observers": Array [],
      "thrownError": null,
    },
    "source": Store {
      "_isScalar": false,
      "actionsObserver": ActionsSubject {
        "_isScalar": false,
        "_value": Object {
          "type": "@ngrx/store/init",
        },
        "closed": false,
        "hasError": false,
        "isStopped": false,
        "observers": Array [],
        "thrownError": null,
      },
      "operator": MapOperator {
        "project": [Function],
        "thisArg": undefined,
      },
      "reducerManager": MockReducerManager {
        "_isScalar": false,
        "_value": [Function],
        "closed": false,
        "hasError": false,
        "isStopped": false,
        "observers": Array [],
        "thrownError": null,
      },
      "source": MockStore {
        "_isScalar": false,
        "actionsObserver": ActionsSubject {
          "_isScalar": false,
          "_value": Object {
            "type": "@ngrx/store/init",
          },
          "closed": false,
          "hasError": false,
          "isStopped": false,
          "observers": Array [],
          "thrownError": null,
        },
        "initialState": Object {},
        "lastState": Object {},
        "reducerManager": MockReducerManager {
          "_isScalar": false,
          "_value": [Function],
          "closed": false,
          "hasError": false,
          "isStopped": false,
          "observers": Array [],
          "thrownError": null,
        },
        "scannedActions$": Observable {
          "_isScalar": false,
          "source": ActionsSubject {
            "_isScalar": false,
            "_value": Object {
              "type": "@ngrx/store/init",
            },
            "closed": false,
            "hasError": false,
            "isStopped": false,
            "observers": Array [],
            "thrownError": null,
          },
        },
        "selectors": Map {
          [Function] => null,
        },
        "source": MockState {
          "_isScalar": false,
          "_value": Object {},
          "closed": false,
          "hasError": false,
          "isStopped": false,
          "observers": Array [
            MapSubscriber {
              "_parentOrParents": DistinctUntilChangedSubscriber {
                "_parentOrParents": Subscriber {
                  "_parentOrParents": null,
                  "_subscriptions": Array [
                    [Circular],
                  ],
                  "closed": false,
                  "destination": SafeSubscriber {
                    "_complete": undefined,
                    "_context": Object {
                      "unsubscribe": [Function],
                    },
                    "_error": [Function],
                    "_next": [Function],
                    "_parentOrParents": null,
                    "_parentSubscriber": [Circular],
                    "_subscriptions": null,
                    "closed": false,
                    "destination": Object {
                      "closed": true,
                      "complete": [Function],
                      "error": [Function],
                      "next": [Function],
                    },
                    "isStopped": false,
                    "syncErrorThrowable": false,
                    "syncErrorThrown": false,
                    "syncErrorValue": null,
                  },
                  "isStopped": false,
                  "syncErrorThrowable": true,
                  "syncErrorThrown": false,
                  "syncErrorValue": null,
                },
                "_subscriptions": Array [
                  [Circular],
                ],
                "closed": false,
                "destination": Subscriber {
                  "_parentOrParents": null,
                  "_subscriptions": Array [
                    [Circular],
                  ],
                  "closed": false,
                  "destination": SafeSubscriber {
                    "_complete": undefined,
                    "_context": Object {
                      "unsubscribe": [Function],
                    },
                    "_error": [Function],
                    "_next": [Function],
                    "_parentOrParents": null,
                    "_parentSubscriber": [Circular],
                    "_subscriptions": null,
                    "closed": false,
                    "destination": Object {
                      "closed": true,
                      "complete": [Function],
                      "error": [Function],
                      "next": [Function],
                    },
                    "isStopped": false,
                    "syncErrorThrowable": false,
                    "syncErrorThrown": false,
                    "syncErrorValue": null,
                  },
                  "isStopped": false,
                  "syncErrorThrowable": true,
                  "syncErrorThrown": false,
                  "syncErrorValue": null,
                },
                "hasKey": true,
                "isStopped": false,
                "key": TrestleUser {
                  "_email": "",
                  "_firstName": "",
                  "_id": undefined,
                  "_lastName": "",
                  "_password": "",
                  "_privileges": 3,
                },
                "keySelector": undefined,
                "syncErrorThrowable": true,
                "syncErrorThrown": false,
                "syncErrorValue": null,
              },
              "_subscriptions": Array [
                SubjectSubscription {
                  "_parentOrParents": [Circular],
                  "_subscriptions": null,
                  "closed": false,
                  "subject": [Circular],
                  "subscriber": [Circular],
                },
              ],
              "closed": false,
              "count": 2,
              "destination": DistinctUntilChangedSubscriber {
                "_parentOrParents": Subscriber {
                  "_parentOrParents": null,
                  "_subscriptions": Array [
                    [Circular],
                  ],
                  "closed": false,
                  "destination": SafeSubscriber {
                    "_complete": undefined,
                    "_context": Object {
                      "unsubscribe": [Function],
                    },
                    "_error": [Function],
                    "_next": [Function],
                    "_parentOrParents": null,
                    "_parentSubscriber": [Circular],
                    "_subscriptions": null,
                    "closed": false,
                    "destination": Object {
                      "closed": true,
                      "complete": [Function],
                      "error": [Function],
                      "next": [Function],
                    },
                    "isStopped": false,
                    "syncErrorThrowable": false,
                    "syncErrorThrown": false,
                    "syncErrorValue": null,
                  },
                  "isStopped": false,
                  "syncErrorThrowable": true,
                  "syncErrorThrown": false,
                  "syncErrorValue": null,
                },
                "_subscriptions": Array [
                  [Circular],
                ],
                "closed": false,
                "destination": Subscriber {
                  "_parentOrParents": null,
                  "_subscriptions": Array [
                    [Circular],
                  ],
                  "closed": false,
                  "destination": SafeSubscriber {
                    "_complete": undefined,
                    "_context": Object {
                      "unsubscribe": [Function],
                    },
                    "_error": [Function],
                    "_next": [Function],
                    "_parentOrParents": null,
                    "_parentSubscriber": [Circular],
                    "_subscriptions": null,
                    "closed": false,
                    "destination": Object {
                      "closed": true,
                      "complete": [Function],
                      "error": [Function],
                      "next": [Function],
                    },
                    "isStopped": false,
                    "syncErrorThrowable": false,
                    "syncErrorThrown": false,
                    "syncErrorValue": null,
                  },
                  "isStopped": false,
                  "syncErrorThrowable": true,
                  "syncErrorThrown": false,
                  "syncErrorValue": null,
                },
                "hasKey": true,
                "isStopped": false,
                "key": TrestleUser {
                  "_email": "",
                  "_firstName": "",
                  "_id": undefined,
                  "_lastName": "",
                  "_password": "",
                  "_privileges": 3,
                },
                "keySelector": undefined,
                "syncErrorThrowable": true,
                "syncErrorThrown": false,
                "syncErrorValue": null,
              },
              "isStopped": false,
              "project": [Function],
              "syncErrorThrowable": true,
              "syncErrorThrown": false,
              "syncErrorValue": null,
              "thisArg": [Circular],
            },
          ],
          "thrownError": null,
        },
        "state$": MockState {
          "_isScalar": false,
          "_value": Object {},
          "closed": false,
          "hasError": false,
          "isStopped": false,
          "observers": Array [
            MapSubscriber {
              "_parentOrParents": DistinctUntilChangedSubscriber {
                "_parentOrParents": Subscriber {
                  "_parentOrParents": null,
                  "_subscriptions": Array [
                    [Circular],
                  ],
                  "closed": false,
                  "destination": SafeSubscriber {
                    "_complete": undefined,
                    "_context": Object {
                      "unsubscribe": [Function],
                    },
                    "_error": [Function],
                    "_next": [Function],
                    "_parentOrParents": null,
                    "_parentSubscriber": [Circular],
                    "_subscriptions": null,
                    "closed": false,
                    "destination": Object {
                      "closed": true,
                      "complete": [Function],
                      "error": [Function],
                      "next": [Function],
                    },
                    "isStopped": false,
                    "syncErrorThrowable": false,
                    "syncErrorThrown": false,
                    "syncErrorValue": null,
                  },
                  "isStopped": false,
                  "syncErrorThrowable": true,
                  "syncErrorThrown": false,
                  "syncErrorValue": null,
                },
                "_subscriptions": Array [
                  [Circular],
                ],
                "closed": false,
                "destination": Subscriber {
                  "_parentOrParents": null,
                  "_subscriptions": Array [
                    [Circular],
                  ],
                  "closed": false,
                  "destination": SafeSubscriber {
                    "_complete": undefined,
                    "_context": Object {
                      "unsubscribe": [Function],
                    },
                    "_error": [Function],
                    "_next": [Function],
                    "_parentOrParents": null,
                    "_parentSubscriber": [Circular],
                    "_subscriptions": null,
                    "closed": false,
                    "destination": Object {
                      "closed": true,
                      "complete": [Function],
                      "error": [Function],
                      "next": [Function],
                    },
                    "isStopped": false,
                    "syncErrorThrowable": false,
                    "syncErrorThrown": false,
                    "syncErrorValue": null,
                  },
                  "isStopped": false,
                  "syncErrorThrowable": true,
                  "syncErrorThrown": false,
                  "syncErrorValue": null,
                },
                "hasKey": true,
                "isStopped": false,
                "key": TrestleUser {
                  "_email": "",
                  "_firstName": "",
                  "_id": undefined,
                  "_lastName": "",
                  "_password": "",
                  "_privileges": 3,
                },
                "keySelector": undefined,
                "syncErrorThrowable": true,
                "syncErrorThrown": false,
                "syncErrorValue": null,
              },
              "_subscriptions": Array [
                SubjectSubscription {
                  "_parentOrParents": [Circular],
                  "_subscriptions": null,
                  "closed": false,
                  "subject": [Circular],
                  "subscriber": [Circular],
                },
              ],
              "closed": false,
              "count": 2,
              "destination": DistinctUntilChangedSubscriber {
                "_parentOrParents": Subscriber {
                  "_parentOrParents": null,
                  "_subscriptions": Array [
                    [Circular],
                  ],
                  "closed": false,
                  "destination": SafeSubscriber {
                    "_complete": undefined,
                    "_context": Object {
                      "unsubscribe": [Function],
                    },
                    "_error": [Function],
                    "_next": [Function],
                    "_parentOrParents": null,
                    "_parentSubscriber": [Circular],
                    "_subscriptions": null,
                    "closed": false,
                    "destination": Object {
                      "closed": true,
                      "complete": [Function],
                      "error": [Function],
                      "next": [Function],
                    },
                    "isStopped": false,
                    "syncErrorThrowable": false,
                    "syncErrorThrown": false,
                    "syncErrorValue": null,
                  },
                  "isStopped": false,
                  "syncErrorThrowable": true,
                  "syncErrorThrown": false,
                  "syncErrorValue": null,
                },
                "_subscriptions": Array [
                  [Circular],
                ],
                "closed": false,
                "destination": Subscriber {
                  "_parentOrParents": null,
                  "_subscriptions": Array [
                    [Circular],
                  ],
                  "closed": false,
                  "destination": SafeSubscriber {
                    "_complete": undefined,
                    "_context": Object {
                      "unsubscribe": [Function],
                    },
                    "_error": [Function],
                    "_next": [Function],
                    "_parentOrParents": null,
                    "_parentSubscriber": [Circular],
                    "_subscriptions": null,
                    "closed": false,
                    "destination": Object {
                      "closed": true,
                      "complete": [Function],
                      "error": [Function],
                      "next": [Function],
                    },
                    "isStopped": false,
                    "syncErrorThrowable": false,
                    "syncErrorThrown": false,
                    "syncErrorValue": null,
                  },
                  "isStopped": false,
                  "syncErrorThrowable": true,
                  "syncErrorThrown": false,
                  "syncErrorValue": null,
                },
                "hasKey": true,
                "isStopped": false,
                "key": TrestleUser {
                  "_email": "",
                  "_firstName": "",
                  "_id": undefined,
                  "_lastName": "",
                  "_password": "",
                  "_privileges": 3,
                },
                "keySelector": undefined,
                "syncErrorThrowable": true,
                "syncErrorThrown": false,
                "syncErrorValue": null,
              },
              "isStopped": false,
              "project": [Function],
              "syncErrorThrowable": true,
              "syncErrorThrown": false,
              "syncErrorValue": null,
              "thisArg": [Circular],
            },
          ],
          "thrownError": null,
        },
      },
    },
  },
}
`;

exports[`TopNavComponent should should be logged out 1`] = `
TopNavComponent {
  "headerClicked": EventEmitter_ {
    "__isAsync": false,
    "_isScalar": false,
    "closed": false,
    "hasError": false,
    "isStopped": false,
    "observers": Array [],
    "thrownError": null,
  },
  "store": MockStore {
    "_isScalar": false,
    "actionsObserver": ActionsSubject {
      "_isScalar": false,
      "_value": Object {
        "type": "@ngrx/store/init",
      },
      "closed": false,
      "hasError": false,
      "isStopped": false,
      "observers": Array [],
      "thrownError": null,
    },
    "initialState": Object {},
    "lastState": Object {},
    "reducerManager": MockReducerManager {
      "_isScalar": false,
      "_value": [Function],
      "closed": false,
      "hasError": false,
      "isStopped": false,
      "observers": Array [],
      "thrownError": null,
    },
    "scannedActions$": Observable {
      "_isScalar": false,
      "source": ActionsSubject {
        "_isScalar": false,
        "_value": Object {
          "type": "@ngrx/store/init",
        },
        "closed": false,
        "hasError": false,
        "isStopped": false,
        "observers": Array [],
        "thrownError": null,
      },
    },
    "selectors": Map {
      [Function] => null,
    },
    "source": MockState {
      "_isScalar": false,
      "_value": Object {},
      "closed": false,
      "hasError": false,
      "isStopped": false,
      "observers": Array [
        MapSubscriber {
          "_parentOrParents": DistinctUntilChangedSubscriber {
            "_parentOrParents": Subscriber {
              "_parentOrParents": null,
              "_subscriptions": Array [
                [Circular],
              ],
              "closed": false,
              "destination": SafeSubscriber {
                "_complete": undefined,
                "_context": Object {
                  "unsubscribe": [Function],
                },
                "_error": [Function],
                "_next": [Function],
                "_parentOrParents": null,
                "_parentSubscriber": [Circular],
                "_subscriptions": null,
                "closed": false,
                "destination": Object {
                  "closed": true,
                  "complete": [Function],
                  "error": [Function],
                  "next": [Function],
                },
                "isStopped": false,
                "syncErrorThrowable": false,
                "syncErrorThrown": false,
                "syncErrorValue": null,
              },
              "isStopped": false,
              "syncErrorThrowable": true,
              "syncErrorThrown": false,
              "syncErrorValue": null,
            },
            "_subscriptions": Array [
              [Circular],
            ],
            "closed": false,
            "destination": Subscriber {
              "_parentOrParents": null,
              "_subscriptions": Array [
                [Circular],
              ],
              "closed": false,
              "destination": SafeSubscriber {
                "_complete": undefined,
                "_context": Object {
                  "unsubscribe": [Function],
                },
                "_error": [Function],
                "_next": [Function],
                "_parentOrParents": null,
                "_parentSubscriber": [Circular],
                "_subscriptions": null,
                "closed": false,
                "destination": Object {
                  "closed": true,
                  "complete": [Function],
                  "error": [Function],
                  "next": [Function],
                },
                "isStopped": false,
                "syncErrorThrowable": false,
                "syncErrorThrown": false,
                "syncErrorValue": null,
              },
              "isStopped": false,
              "syncErrorThrowable": true,
              "syncErrorThrown": false,
              "syncErrorValue": null,
            },
            "hasKey": true,
            "isStopped": false,
            "key": null,
            "keySelector": undefined,
            "syncErrorThrowable": true,
            "syncErrorThrown": false,
            "syncErrorValue": null,
          },
          "_subscriptions": Array [
            SubjectSubscription {
              "_parentOrParents": [Circular],
              "_subscriptions": null,
              "closed": false,
              "subject": [Circular],
              "subscriber": [Circular],
            },
          ],
          "closed": false,
          "count": 1,
          "destination": DistinctUntilChangedSubscriber {
            "_parentOrParents": Subscriber {
              "_parentOrParents": null,
              "_subscriptions": Array [
                [Circular],
              ],
              "closed": false,
              "destination": SafeSubscriber {
                "_complete": undefined,
                "_context": Object {
                  "unsubscribe": [Function],
                },
                "_error": [Function],
                "_next": [Function],
                "_parentOrParents": null,
                "_parentSubscriber": [Circular],
                "_subscriptions": null,
                "closed": false,
                "destination": Object {
                  "closed": true,
                  "complete": [Function],
                  "error": [Function],
                  "next": [Function],
                },
                "isStopped": false,
                "syncErrorThrowable": false,
                "syncErrorThrown": false,
                "syncErrorValue": null,
              },
              "isStopped": false,
              "syncErrorThrowable": true,
              "syncErrorThrown": false,
              "syncErrorValue": null,
            },
            "_subscriptions": Array [
              [Circular],
            ],
            "closed": false,
            "destination": Subscriber {
              "_parentOrParents": null,
              "_subscriptions": Array [
                [Circular],
              ],
              "closed": false,
              "destination": SafeSubscriber {
                "_complete": undefined,
                "_context": Object {
                  "unsubscribe": [Function],
                },
                "_error": [Function],
                "_next": [Function],
                "_parentOrParents": null,
                "_parentSubscriber": [Circular],
                "_subscriptions": null,
                "closed": false,
                "destination": Object {
                  "closed": true,
                  "complete": [Function],
                  "error": [Function],
                  "next": [Function],
                },
                "isStopped": false,
                "syncErrorThrowable": false,
                "syncErrorThrown": false,
                "syncErrorValue": null,
              },
              "isStopped": false,
              "syncErrorThrowable": true,
              "syncErrorThrown": false,
              "syncErrorValue": null,
            },
            "hasKey": true,
            "isStopped": false,
            "key": null,
            "keySelector": undefined,
            "syncErrorThrowable": true,
            "syncErrorThrown": false,
            "syncErrorValue": null,
          },
          "isStopped": false,
          "project": [Function],
          "syncErrorThrowable": true,
          "syncErrorThrown": false,
          "syncErrorValue": null,
          "thisArg": [Circular],
        },
      ],
      "thrownError": null,
    },
    "state$": MockState {
      "_isScalar": false,
      "_value": Object {},
      "closed": false,
      "hasError": false,
      "isStopped": false,
      "observers": Array [
        MapSubscriber {
          "_parentOrParents": DistinctUntilChangedSubscriber {
            "_parentOrParents": Subscriber {
              "_parentOrParents": null,
              "_subscriptions": Array [
                [Circular],
              ],
              "closed": false,
              "destination": SafeSubscriber {
                "_complete": undefined,
                "_context": Object {
                  "unsubscribe": [Function],
                },
                "_error": [Function],
                "_next": [Function],
                "_parentOrParents": null,
                "_parentSubscriber": [Circular],
                "_subscriptions": null,
                "closed": false,
                "destination": Object {
                  "closed": true,
                  "complete": [Function],
                  "error": [Function],
                  "next": [Function],
                },
                "isStopped": false,
                "syncErrorThrowable": false,
                "syncErrorThrown": false,
                "syncErrorValue": null,
              },
              "isStopped": false,
              "syncErrorThrowable": true,
              "syncErrorThrown": false,
              "syncErrorValue": null,
            },
            "_subscriptions": Array [
              [Circular],
            ],
            "closed": false,
            "destination": Subscriber {
              "_parentOrParents": null,
              "_subscriptions": Array [
                [Circular],
              ],
              "closed": false,
              "destination": SafeSubscriber {
                "_complete": undefined,
                "_context": Object {
                  "unsubscribe": [Function],
                },
                "_error": [Function],
                "_next": [Function],
                "_parentOrParents": null,
                "_parentSubscriber": [Circular],
                "_subscriptions": null,
                "closed": false,
                "destination": Object {
                  "closed": true,
                  "complete": [Function],
                  "error": [Function],
                  "next": [Function],
                },
                "isStopped": false,
                "syncErrorThrowable": false,
                "syncErrorThrown": false,
                "syncErrorValue": null,
              },
              "isStopped": false,
              "syncErrorThrowable": true,
              "syncErrorThrown": false,
              "syncErrorValue": null,
            },
            "hasKey": true,
            "isStopped": false,
            "key": null,
            "keySelector": undefined,
            "syncErrorThrowable": true,
            "syncErrorThrown": false,
            "syncErrorValue": null,
          },
          "_subscriptions": Array [
            SubjectSubscription {
              "_parentOrParents": [Circular],
              "_subscriptions": null,
              "closed": false,
              "subject": [Circular],
              "subscriber": [Circular],
            },
          ],
          "closed": false,
          "count": 1,
          "destination": DistinctUntilChangedSubscriber {
            "_parentOrParents": Subscriber {
              "_parentOrParents": null,
              "_subscriptions": Array [
                [Circular],
              ],
              "closed": false,
              "destination": SafeSubscriber {
                "_complete": undefined,
                "_context": Object {
                  "unsubscribe": [Function],
                },
                "_error": [Function],
                "_next": [Function],
                "_parentOrParents": null,
                "_parentSubscriber": [Circular],
                "_subscriptions": null,
                "closed": false,
                "destination": Object {
                  "closed": true,
                  "complete": [Function],
                  "error": [Function],
                  "next": [Function],
                },
                "isStopped": false,
                "syncErrorThrowable": false,
                "syncErrorThrown": false,
                "syncErrorValue": null,
              },
              "isStopped": false,
              "syncErrorThrowable": true,
              "syncErrorThrown": false,
              "syncErrorValue": null,
            },
            "_subscriptions": Array [
              [Circular],
            ],
            "closed": false,
            "destination": Subscriber {
              "_parentOrParents": null,
              "_subscriptions": Array [
                [Circular],
              ],
              "closed": false,
              "destination": SafeSubscriber {
                "_complete": undefined,
                "_context": Object {
                  "unsubscribe": [Function],
                },
                "_error": [Function],
                "_next": [Function],
                "_parentOrParents": null,
                "_parentSubscriber": [Circular],
                "_subscriptions": null,
                "closed": false,
                "destination": Object {
                  "closed": true,
                  "complete": [Function],
                  "error": [Function],
                  "next": [Function],
                },
                "isStopped": false,
                "syncErrorThrowable": false,
                "syncErrorThrown": false,
                "syncErrorValue": null,
              },
              "isStopped": false,
              "syncErrorThrowable": true,
              "syncErrorThrown": false,
              "syncErrorValue": null,
            },
            "hasKey": true,
            "isStopped": false,
            "key": null,
            "keySelector": undefined,
            "syncErrorThrowable": true,
            "syncErrorThrown": false,
            "syncErrorValue": null,
          },
          "isStopped": false,
          "project": [Function],
          "syncErrorThrowable": true,
          "syncErrorThrown": false,
          "syncErrorValue": null,
          "thisArg": [Circular],
        },
      ],
      "thrownError": null,
    },
  },
  "user": Store {
    "_isScalar": false,
    "actionsObserver": ActionsSubject {
      "_isScalar": false,
      "_value": Object {
        "type": "@ngrx/store/init",
      },
      "closed": false,
      "hasError": false,
      "isStopped": false,
      "observers": Array [],
      "thrownError": null,
    },
    "operator": DistinctUntilChangedOperator {
      "compare": undefined,
      "keySelector": undefined,
    },
    "reducerManager": MockReducerManager {
      "_isScalar": false,
      "_value": [Function],
      "closed": false,
      "hasError": false,
      "isStopped": false,
      "observers": Array [],
      "thrownError": null,
    },
    "source": Store {
      "_isScalar": false,
      "actionsObserver": ActionsSubject {
        "_isScalar": false,
        "_value": Object {
          "type": "@ngrx/store/init",
        },
        "closed": false,
        "hasError": false,
        "isStopped": false,
        "observers": Array [],
        "thrownError": null,
      },
      "operator": MapOperator {
        "project": [Function],
        "thisArg": undefined,
      },
      "reducerManager": MockReducerManager {
        "_isScalar": false,
        "_value": [Function],
        "closed": false,
        "hasError": false,
        "isStopped": false,
        "observers": Array [],
        "thrownError": null,
      },
      "source": MockStore {
        "_isScalar": false,
        "actionsObserver": ActionsSubject {
          "_isScalar": false,
          "_value": Object {
            "type": "@ngrx/store/init",
          },
          "closed": false,
          "hasError": false,
          "isStopped": false,
          "observers": Array [],
          "thrownError": null,
        },
        "initialState": Object {},
        "lastState": Object {},
        "reducerManager": MockReducerManager {
          "_isScalar": false,
          "_value": [Function],
          "closed": false,
          "hasError": false,
          "isStopped": false,
          "observers": Array [],
          "thrownError": null,
        },
        "scannedActions$": Observable {
          "_isScalar": false,
          "source": ActionsSubject {
            "_isScalar": false,
            "_value": Object {
              "type": "@ngrx/store/init",
            },
            "closed": false,
            "hasError": false,
            "isStopped": false,
            "observers": Array [],
            "thrownError": null,
          },
        },
        "selectors": Map {
          [Function] => null,
        },
        "source": MockState {
          "_isScalar": false,
          "_value": Object {},
          "closed": false,
          "hasError": false,
          "isStopped": false,
          "observers": Array [
            MapSubscriber {
              "_parentOrParents": DistinctUntilChangedSubscriber {
                "_parentOrParents": Subscriber {
                  "_parentOrParents": null,
                  "_subscriptions": Array [
                    [Circular],
                  ],
                  "closed": false,
                  "destination": SafeSubscriber {
                    "_complete": undefined,
                    "_context": Object {
                      "unsubscribe": [Function],
                    },
                    "_error": [Function],
                    "_next": [Function],
                    "_parentOrParents": null,
                    "_parentSubscriber": [Circular],
                    "_subscriptions": null,
                    "closed": false,
                    "destination": Object {
                      "closed": true,
                      "complete": [Function],
                      "error": [Function],
                      "next": [Function],
                    },
                    "isStopped": false,
                    "syncErrorThrowable": false,
                    "syncErrorThrown": false,
                    "syncErrorValue": null,
                  },
                  "isStopped": false,
                  "syncErrorThrowable": true,
                  "syncErrorThrown": false,
                  "syncErrorValue": null,
                },
                "_subscriptions": Array [
                  [Circular],
                ],
                "closed": false,
                "destination": Subscriber {
                  "_parentOrParents": null,
                  "_subscriptions": Array [
                    [Circular],
                  ],
                  "closed": false,
                  "destination": SafeSubscriber {
                    "_complete": undefined,
                    "_context": Object {
                      "unsubscribe": [Function],
                    },
                    "_error": [Function],
                    "_next": [Function],
                    "_parentOrParents": null,
                    "_parentSubscriber": [Circular],
                    "_subscriptions": null,
                    "closed": false,
                    "destination": Object {
                      "closed": true,
                      "complete": [Function],
                      "error": [Function],
                      "next": [Function],
                    },
                    "isStopped": false,
                    "syncErrorThrowable": false,
                    "syncErrorThrown": false,
                    "syncErrorValue": null,
                  },
                  "isStopped": false,
                  "syncErrorThrowable": true,
                  "syncErrorThrown": false,
                  "syncErrorValue": null,
                },
                "hasKey": true,
                "isStopped": false,
                "key": null,
                "keySelector": undefined,
                "syncErrorThrowable": true,
                "syncErrorThrown": false,
                "syncErrorValue": null,
              },
              "_subscriptions": Array [
                SubjectSubscription {
                  "_parentOrParents": [Circular],
                  "_subscriptions": null,
                  "closed": false,
                  "subject": [Circular],
                  "subscriber": [Circular],
                },
              ],
              "closed": false,
              "count": 1,
              "destination": DistinctUntilChangedSubscriber {
                "_parentOrParents": Subscriber {
                  "_parentOrParents": null,
                  "_subscriptions": Array [
                    [Circular],
                  ],
                  "closed": false,
                  "destination": SafeSubscriber {
                    "_complete": undefined,
                    "_context": Object {
                      "unsubscribe": [Function],
                    },
                    "_error": [Function],
                    "_next": [Function],
                    "_parentOrParents": null,
                    "_parentSubscriber": [Circular],
                    "_subscriptions": null,
                    "closed": false,
                    "destination": Object {
                      "closed": true,
                      "complete": [Function],
                      "error": [Function],
                      "next": [Function],
                    },
                    "isStopped": false,
                    "syncErrorThrowable": false,
                    "syncErrorThrown": false,
                    "syncErrorValue": null,
                  },
                  "isStopped": false,
                  "syncErrorThrowable": true,
                  "syncErrorThrown": false,
                  "syncErrorValue": null,
                },
                "_subscriptions": Array [
                  [Circular],
                ],
                "closed": false,
                "destination": Subscriber {
                  "_parentOrParents": null,
                  "_subscriptions": Array [
                    [Circular],
                  ],
                  "closed": false,
                  "destination": SafeSubscriber {
                    "_complete": undefined,
                    "_context": Object {
                      "unsubscribe": [Function],
                    },
                    "_error": [Function],
                    "_next": [Function],
                    "_parentOrParents": null,
                    "_parentSubscriber": [Circular],
                    "_subscriptions": null,
                    "closed": false,
                    "destination": Object {
                      "closed": true,
                      "complete": [Function],
                      "error": [Function],
                      "next": [Function],
                    },
                    "isStopped": false,
                    "syncErrorThrowable": false,
                    "syncErrorThrown": false,
                    "syncErrorValue": null,
                  },
                  "isStopped": false,
                  "syncErrorThrowable": true,
                  "syncErrorThrown": false,
                  "syncErrorValue": null,
                },
                "hasKey": true,
                "isStopped": false,
                "key": null,
                "keySelector": undefined,
                "syncErrorThrowable": true,
                "syncErrorThrown": false,
                "syncErrorValue": null,
              },
              "isStopped": false,
              "project": [Function],
              "syncErrorThrowable": true,
              "syncErrorThrown": false,
              "syncErrorValue": null,
              "thisArg": [Circular],
            },
          ],
          "thrownError": null,
        },
        "state$": MockState {
          "_isScalar": false,
          "_value": Object {},
          "closed": false,
          "hasError": false,
          "isStopped": false,
          "observers": Array [
            MapSubscriber {
              "_parentOrParents": DistinctUntilChangedSubscriber {
                "_parentOrParents": Subscriber {
                  "_parentOrParents": null,
                  "_subscriptions": Array [
                    [Circular],
                  ],
                  "closed": false,
                  "destination": SafeSubscriber {
                    "_complete": undefined,
                    "_context": Object {
                      "unsubscribe": [Function],
                    },
                    "_error": [Function],
                    "_next": [Function],
                    "_parentOrParents": null,
                    "_parentSubscriber": [Circular],
                    "_subscriptions": null,
                    "closed": false,
                    "destination": Object {
                      "closed": true,
                      "complete": [Function],
                      "error": [Function],
                      "next": [Function],
                    },
                    "isStopped": false,
                    "syncErrorThrowable": false,
                    "syncErrorThrown": false,
                    "syncErrorValue": null,
                  },
                  "isStopped": false,
                  "syncErrorThrowable": true,
                  "syncErrorThrown": false,
                  "syncErrorValue": null,
                },
                "_subscriptions": Array [
                  [Circular],
                ],
                "closed": false,
                "destination": Subscriber {
                  "_parentOrParents": null,
                  "_subscriptions": Array [
                    [Circular],
                  ],
                  "closed": false,
                  "destination": SafeSubscriber {
                    "_complete": undefined,
                    "_context": Object {
                      "unsubscribe": [Function],
                    },
                    "_error": [Function],
                    "_next": [Function],
                    "_parentOrParents": null,
                    "_parentSubscriber": [Circular],
                    "_subscriptions": null,
                    "closed": false,
                    "destination": Object {
                      "closed": true,
                      "complete": [Function],
                      "error": [Function],
                      "next": [Function],
                    },
                    "isStopped": false,
                    "syncErrorThrowable": false,
                    "syncErrorThrown": false,
                    "syncErrorValue": null,
                  },
                  "isStopped": false,
                  "syncErrorThrowable": true,
                  "syncErrorThrown": false,
                  "syncErrorValue": null,
                },
                "hasKey": true,
                "isStopped": false,
                "key": null,
                "keySelector": undefined,
                "syncErrorThrowable": true,
                "syncErrorThrown": false,
                "syncErrorValue": null,
              },
              "_subscriptions": Array [
                SubjectSubscription {
                  "_parentOrParents": [Circular],
                  "_subscriptions": null,
                  "closed": false,
                  "subject": [Circular],
                  "subscriber": [Circular],
                },
              ],
              "closed": false,
              "count": 1,
              "destination": DistinctUntilChangedSubscriber {
                "_parentOrParents": Subscriber {
                  "_parentOrParents": null,
                  "_subscriptions": Array [
                    [Circular],
                  ],
                  "closed": false,
                  "destination": SafeSubscriber {
                    "_complete": undefined,
                    "_context": Object {
                      "unsubscribe": [Function],
                    },
                    "_error": [Function],
                    "_next": [Function],
                    "_parentOrParents": null,
                    "_parentSubscriber": [Circular],
                    "_subscriptions": null,
                    "closed": false,
                    "destination": Object {
                      "closed": true,
                      "complete": [Function],
                      "error": [Function],
                      "next": [Function],
                    },
                    "isStopped": false,
                    "syncErrorThrowable": false,
                    "syncErrorThrown": false,
                    "syncErrorValue": null,
                  },
                  "isStopped": false,
                  "syncErrorThrowable": true,
                  "syncErrorThrown": false,
                  "syncErrorValue": null,
                },
                "_subscriptions": Array [
                  [Circular],
                ],
                "closed": false,
                "destination": Subscriber {
                  "_parentOrParents": null,
                  "_subscriptions": Array [
                    [Circular],
                  ],
                  "closed": false,
                  "destination": SafeSubscriber {
                    "_complete": undefined,
                    "_context": Object {
                      "unsubscribe": [Function],
                    },
                    "_error": [Function],
                    "_next": [Function],
                    "_parentOrParents": null,
                    "_parentSubscriber": [Circular],
                    "_subscriptions": null,
                    "closed": false,
                    "destination": Object {
                      "closed": true,
                      "complete": [Function],
                      "error": [Function],
                      "next": [Function],
                    },
                    "isStopped": false,
                    "syncErrorThrowable": false,
                    "syncErrorThrown": false,
                    "syncErrorValue": null,
                  },
                  "isStopped": false,
                  "syncErrorThrowable": true,
                  "syncErrorThrown": false,
                  "syncErrorValue": null,
                },
                "hasKey": true,
                "isStopped": false,
                "key": null,
                "keySelector": undefined,
                "syncErrorThrowable": true,
                "syncErrorThrown": false,
                "syncErrorValue": null,
              },
              "isStopped": false,
              "project": [Function],
              "syncErrorThrowable": true,
              "syncErrorThrown": false,
              "syncErrorValue": null,
              "thisArg": [Circular],
            },
          ],
          "thrownError": null,
        },
      },
    },
  },
}
`;
