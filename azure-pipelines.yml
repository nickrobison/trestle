pool:
  vmImage: 'ubuntu-16.04'

variables:
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn

resources:
  containers:
    - container: graphdb
      endpoint: dockerHub
      image: nickrobison/graphdb:8.2.0-free
      ports:
        - 7200:7200

stages:
  - stage: Build
    displayName: Build Source Code
    pool:
      vmImage: "ubuntu-latest"
    jobs:
      - job: Compile_Java
        displayName: Compile Java Sources
        steps:
          - checkout: self
            submodules: true
          - task: Cache@2
            displayName: Cache Maven local repo
            inputs:
              key: 'gradle | "$(Agent.OS)" | **/build.gradle'
              restoreKeys: |
                maven | "$(Agent.OS)"
                maven
              path: $(MAVEN_CACHE_FOLDER)
          - task: Gradle@2
            displayName: Build Java
            inputs:
              gradleOptions: '-Xmx3072m -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.11'
              tasks: 'assemble'
              jdkArchitectureOption: 'x64'
#          - task: Maven@3
#            displayName: Maven Package
#            inputs:
#              mavenPomFile: 'pom.xml'
#              mavenOptions: '-Xmx3072m -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
#              javaHomeOption: 'JDKVersion'
#              jdkVersionOption: '1.11'
#              jdkArchitectureOption: 'x64'
#              goals: 'package -DskipTests '
          - task: CopyFiles@2
            inputs:
              contents: "trestle-*/build/**"
              targetFolder: $(Build.ArtifactStagingDirectory)
          - publish: $(Build.ArtifactStagingDirectory)
            artifact: java
      - job:
        displayName: Compile Yarn sources
        steps:
          - task: Cache@2
            inputs:
              key: 'yarn | "$(Agent.OS)" | trestle-server/yarn.lock'
              restoreKeys: |
                yarn | "$(Agent.OS)"
                yarn
              path: $(YARN_CACHE_FOLDER)
          - script: yarn --cwd trestle-server/ install
            displayName: Install Dependencies
          - script: yarn --cwd trestle-server/ run prod
            displayName: Compile Prod build
          - task: CopyFiles@2
            inputs:
              sourceFolder:  $(Build.SourcesDirectory)/trestle-server/src/main/resources/build
              targetFolder: $(Build.ArtifactStagingDirectory)
          - publish: $(Build.ArtifactStagingDirectory)
            artifact: ui

  - stage: Test
    displayName: Run tests
    dependsOn: Build
    pool:
      vmImage: "ubuntu-latest"
    jobs:
      - job: Test_Java
        displayName: Test Java
        services:
          graphdb: graphdb
        steps:
          - checkout: self
            submodules: true
          - download: current
            artifact: java
          - task: CopyFiles@2
            inputs:
              sourceFolder: $(Pipeline.Workspace)/java
              targetFolder: $(Build.SourcesDirectory)
          - task: Cache@2
            inputs:
              key: 'gradle | "$(Agent.OS)" | **/build.gradle'
              restoreKeys: |
                maven | "$(Agent.OS)"
                maven
              path: $(MAVEN_CACHE_FOLDER)
            displayName: Cache Maven local repo
          - task: SonarCloudPrepare@1
            inputs:
              SonarCloud: 'Sonar Cloud'
              organization: 'nickrobison-github'
              scannerMode: 'Other'
          - task: Gradle@2
            inputs:
              gradleOptions: '-Xmx3072m -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.11'
              tasks: 'build jacocoTestReport'
              sonarQubeRunAnalysis: true
              sqGradlePluginVersionChoice: 'build'
              jdkArchitectureOption: 'x64'
              publishJUnitResults: true
              testResultsFiles: '**/test-results/test/TEST-*.xml'
#          - task: Maven@3
#            inputs:
#              mavenPomFile: 'pom.xml'
#              mavenOptions: '-Xmx3072m -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
#              javaHomeOption: 'JDKVersion'
#              jdkVersionOption: '1.11'
#              jdkArchitectureOption: 'x64'
#              publishJUnitResults: true
#              testResultsFiles: '**/TEST-*.xml'
#              goals: 'test'
#              sonarQubeRunAnalysis: true
          - task: SonarCloudPublish@1
            inputs:
              pollingTimeoutSec: '300'

      - job:
        displayName: Run UI specs
        steps:
          - task: Cache@2
            inputs:
              key: 'yarn | "$(Agent.OS)" | trestle-server/yarn.lock'
              restoreKeys: |
                yarn | "$(Agent.OS)"
                yarn
              path: $(YARN_CACHE_FOLDER)
          - script: yarn --cwd trestle-server/ install
            displayName: Install Dependencies
          - script: yarn --cwd trestle-server/ run test
            displayName: Run jest specs

      - job: Test_UI
        displayName: Test UI
        steps:
          - checkout: self
            submodules: true
          - download: current
            artifact: java
          - download: current
            artifact: ui
          - task: CopyFiles@2
            inputs:
              sourceFolder: $(Pipeline.Workspace)/java
              targetFolder: $(Build.SourcesDirectory)
          - task: CopyFiles@2
            inputs:
              sourceFolder: $(Pipeline.Workspace)/ui
              targetFolder: $(Build.SourcesDirectory)/trestle-server/src/main/resources/build
          - task: Cache@2
            inputs:
              key: 'gradle | "$(Agent.OS)" | **/build.gradle'
              restoreKeys: |
                maven | "$(Agent.OS)"
                maven
              path: $(MAVEN_CACHE_FOLDER)
            displayName: Cache Maven local repo
          - task: Docker@2
            displayName: Login for Private Docker Images
            inputs:
              command: login
              containerRegistry: dockerHub
          - task: Gradle@2
            inputs:
              gradleOptions: '-Xmx3072m -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.11'
              tasks: 'jibDockerBuild'
              jdkArchitectureOption: 'x64'
#          - task: Maven@3
#            displayName: Build Docker image
#            inputs:
#              mavenPomFile: 'pom.xml'
#              mavenOptions: '-Xmx3072m -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
#              javaHomeOption: 'JDKVersion'
#              jdkVersionOption: '1.11'
#              jdkArchitectureOption: 'x64'
#              goals: 'package -DskipTests' # Not sure why the skip has to be here
          - task: DockerCompose@0
            displayName: Run Stack
            inputs:
              action: Run services
              dockerComposeFile: docker-compose.yml
          - script: yarn --cwd trestle-server/ install
            displayName: Install Dependencies
          - task: BrowserStackConfig@0
            inputs:
              BrowserStackServiceEndPoint: 'Browserstack'
              browserstackLocal: false
          - script: yarn --cwd trestle-server/ run e2e:ci
            displayName: Run E2E Tests
          - task: BrowserStackResults@0

#  - stage: Deploy
#    displayName: Deploy resources
#    dependsOn: Test
#    pool:
#      vmImage: "ubuntu-latest"
##    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
#    condition: never()
#    jobs:
#      - job: Deploy
#        displayName: Deploy Artifacts
#        steps:
#          - checkout: self
#            submodules: true
#          - download: current
#            artifact: java
#          - download: current
#            artifact: ui
#          - task: CopyFiles@2
#            inputs:
#              sourceFolder: $(Pipeline.Workspace)/java
#              targetFolder: $(Build.SourcesDirectory)
#          - task: CopyFiles@2
#            inputs:
#              sourceFolder: $(Pipeline.Workspace)/ui
#              targetFolder: $(Build.SourcesDirectory)/trestle-server/src/main/resources/build
#          - task: MavenAuthenticate@0
#            inputs:
#              mavenServiceConnections: 'jCenter maven'
#          - task: Cache@2
#            displayName: Cache Maven local repo
#            inputs:
#              key: 'maven | "$(Agent.OS)" | **/pom.xml'
#              restoreKeys: |
#                maven | "$(Agent.OS)"
#                maven
#              path: $(MAVEN_CACHE_FOLDER)
#          - task: Maven@3
#            displayName: Deploy resources
#            inputs:
#              mavenPomFile: 'pom.xml'
#              mavenOptions: '-Xmx3072m -Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
#              javaHomeOption: 'JDKVersion'
#              jdkVersionOption: '1.11'
#              jdkArchitectureOption: 'x64'
#              mavenAuthenticateFeed: true
#              goals: 'deploy -DskipTests' # Not sure why the skip has to be here
#              publishJUnitResults: false
